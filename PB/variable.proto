// Protocol Buffers v4 schema with v3 compatibility
// BERT v3.0 IPC Communication Protocol

syntax = "proto3";

package bert.ipc;

option csharp_namespace = "BERT.IPC";
option java_package = "com.bert.ipc";
option java_outer_classname = "VariableProto";

// Backward compatibility with BERT v2.4.3 Protocol Buffers v3
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

// Variable types supported by BERT
enum VariableType {
  VARIABLE_TYPE_UNSPECIFIED = 0;
  VARIABLE_TYPE_NULL = 1;
  VARIABLE_TYPE_LOGICAL = 2;
  VARIABLE_TYPE_INTEGER = 3;
  VARIABLE_TYPE_DOUBLE = 4;
  VARIABLE_TYPE_STRING = 5;
  VARIABLE_TYPE_LIST = 6;
  VARIABLE_TYPE_MATRIX = 7;
  VARIABLE_TYPE_DATAFRAME = 8;
  VARIABLE_TYPE_FUNCTION = 9;
  VARIABLE_TYPE_ERROR = 10;
}

// Language types supported by BERT v3.0
enum LanguageType {
  LANGUAGE_TYPE_UNSPECIFIED = 0;
  LANGUAGE_TYPE_R = 1;
  LANGUAGE_TYPE_JULIA = 2;
  LANGUAGE_TYPE_PYTHON = 3;  // New in v3.0
}

// Variable representation for IPC communication
message Variable {
  VariableType type = 1;
  
  // Value storage (one of these will be set based on type)
  bool logical_value = 2;
  int64 integer_value = 3;
  double double_value = 4;
  string string_value = 5;
  
  // Complex types
  repeated Variable list_value = 6;
  Matrix matrix_value = 7;
  DataFrame dataframe_value = 8;
  
  // Metadata
  repeated string names = 9;
  map<string, string> attributes = 10;
  
  // v3.0 enhancements
  google.protobuf.Timestamp created_at = 11;
  string workspace_id = 12;
  LanguageType language = 13;
}

// Matrix representation
message Matrix {
  repeated double values = 1;
  int32 rows = 2;
  int32 cols = 3;
  repeated string row_names = 4;
  repeated string col_names = 5;
}

// DataFrame representation
message DataFrame {
  repeated Column columns = 1;
  int32 row_count = 2;
  repeated string row_names = 3;
}

message Column {
  string name = 1;
  VariableType type = 2;
  repeated Variable values = 3;
}

// Function execution request
message FunctionRequest {
  string function_name = 1;
  repeated Variable arguments = 2;
  LanguageType language = 3;
  
  // v3.0 execution context
  ExecutionContext context = 4;
  
  // Backward compatibility with v2.4.3
  string legacy_call_id = 5;
}

// Function execution response
message FunctionResponse {
  Variable result = 1;
  ExecutionStatus status = 2;
  repeated string warnings = 3;
  repeated string output = 4;
  
  // v3.0 enhancements
  ExecutionMetrics metrics = 5;
  string error_details = 6;
}

// Execution context for v3.0
message ExecutionContext {
  string workspace_id = 1;
  string user_id = 2;
  int32 timeout_ms = 3;
  int64 memory_limit_bytes = 4;
  map<string, string> environment_vars = 5;
  bool debug_mode = 6;
}

// Execution status
enum ExecutionStatus {
  EXECUTION_STATUS_UNSPECIFIED = 0;
  EXECUTION_STATUS_SUCCESS = 1;
  EXECUTION_STATUS_ERROR = 2;
  EXECUTION_STATUS_TIMEOUT = 3;
  EXECUTION_STATUS_MEMORY_LIMIT = 4;
  EXECUTION_STATUS_CANCELLED = 5;
}

// Execution metrics for monitoring
message ExecutionMetrics {
  int64 execution_time_ms = 1;
  int64 memory_used_bytes = 2;
  int64 cpu_time_ms = 3;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;
}

// Service definitions for gRPC
service LanguageService {
  // Execute function in specified language
  rpc ExecuteFunction(FunctionRequest) returns (FunctionResponse);
  
  // Stream execution for long-running functions
  rpc ExecuteFunctionStream(FunctionRequest) returns (stream FunctionResponse);
  
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  
  // v3.0 workspace management
  rpc ListFunctions(ListFunctionsRequest) returns (ListFunctionsResponse);
  rpc GetFunctionInfo(GetFunctionInfoRequest) returns (GetFunctionInfoResponse);
}

// Health check messages
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
  string version = 2;
  LanguageType language = 3;
}

// Function listing for v3.0
message ListFunctionsRequest {
  string workspace_id = 1;
  LanguageType language = 2;
}

message ListFunctionsResponse {
  repeated FunctionInfo functions = 1;
}

message FunctionInfo {
  string name = 1;
  string description = 2;
  repeated Parameter parameters = 3;
  VariableType return_type = 4;
  LanguageType language = 5;
  google.protobuf.Timestamp last_modified = 6;
}

message Parameter {
  string name = 1;
  VariableType type = 2;
  bool required = 3;
  string default_value = 4;
  string description = 5;
}

message GetFunctionInfoRequest {
  string function_name = 1;
  string workspace_id = 2;
  LanguageType language = 3;
}

message GetFunctionInfoResponse {
  FunctionInfo function_info = 1;
  string source_code = 2;
}